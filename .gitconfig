[color]
	ui = auto
[alias]
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lgt = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset' --abbrev-commit
	dt = diff-tree --name-only -r HEAD --no-commit-id
	st = status --short
	ap = add -p
	dn = "!f() { [ "x$2" == "x"  ] && git diff HEAD~$1..HEAD~$(($1-1)) || git diff HEAD~$1..HEAD~$2; }; f"
	# print branch name
	bn = "!git rev-parse --abbrev-ref HEAD"
	b = "!git for-each-ref --sort=-authordate refs/heads/ --format='%(HEAD) %(color:reset)%(authordate:iso8601)%(color:reset) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(color:blue)%(authorname)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'"
	cm = "!f() { git commit -m \"[$(git bn)]: $@\"; }; f"
	publish = "!git push -u origin $(git bn)"
	pm = "!git pull --rebase origin master"
	#npm = "!f() { git checkout -b dev_devsrv02-$(git bn) && git pm;}; f"
	#qapublish = "!git push -u origin HEAD:QAOK-$(git bn)"
	unpublish = "!git push origin :$(git bn)"
	recreate = "!f() { [[ -n $@ ]] && git checkout \"$@\" && git unpublish && git checkout master && git branch -d \"$@\" && git checkout -b \"$@\" && git publish; }; f"
	code-review = difftool origin/master...
	merge-span = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
	merge-log = "!git log `git merge-span .. $1`"
	merge-diff = "!git diff `git merge-span ... $1`"
	merge-difftool = "!git difftool `git merge-span ... $1`"
	rb = "!git rebase -i `git merge-base master HEAD`"
	unstage = reset HEAD
	rewind = "!f() { [ "x$1" == "x"  ] && git reset --hard HEAD || git reset --hard HEAD~$1; }; f"
	diffc = diff --cached
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	delete-merged-branches = "!git checkout master && git pull origin master && git branch --merged | grep -v '\\*' | xargs -I{} -n 1 git branch -d {};"
[diff]
	tool = vimdiff3
[difftool]
	prompt = false
[difftool.vimdiff3]
	cmd = /tmp/.vd $REMOTE $LOCAL
[push]
	default = simple
